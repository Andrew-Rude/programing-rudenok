Лабораторна робота №6. Аналіз тексту за допомогою циклів
Руденок Андрій, гр. КН-924в

Індивідуальне завдання: Реалізувати програму для підрахунку кількості голосних літер у заданому тексті.

План: Написати програму, яка визначає кількість голосних літер у введеному слові чи реченні. Програма має враховувати як малі, так і великі голосні літери (a, e, i, o, u, A, E, I, O, U).

Структура проекту:
Проект складається з наступних файлів:
lab06/  
├── Makefile  
├── README.md  
├── doc/  
│   └── lab06.txt  
└── src/  
    └── main.c  

Опис основної частини програми:
Програма реалізує підрахунок голосних літер у тексті.

Основні змінні:

text[MAX_LEN] — масив символів для введення тексту (максимальна довжина — 100 символів).
vowel_count — змінна для підрахунку кількості голосних літер.
Логіка роботи:

Цикл for проходить через кожен символ у тексті до символу завершення рядка ('\0').
Кожен символ перевіряється, чи є він голосною. Якщо так — збільшується значення лічильника vowel_count.
Результат:
Після завершення циклу у змінній vowel_count зберігається кількість голосних літер у тексті.

#include <stdio.h>

#define MAX_LEN 100  // Максимальна довжина рядка

int main() {
    // Вхідне речення
    char text[MAX_LEN] = "Schwarznegger and Stalone";  // Задаємо тестове речення

    // Лічильник для голосних літер
    int vowel_count = 0;

    // Проходимо по кожному символу в тексті
    for (int i = 0; text[i] != '\0'; i++) { //символ, що позначає кінець рядка — '\0' (нульовий символ)
    
        // Перевіряємо, чи є символ голосною (як малу, так і велику літеру)
        if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u' ||
            text[i] == 'A' || text[i] == 'E' || text[i] == 'I' || text[i] == 'O' || text[i] == 'U') {
            vowel_count++;  // Збільшуємо лічильник голосних
        }
    }
    if (vowel_count != 0){} //щоб не видавало помилок
    
    return 0;  // Завершення програми
}

Використання відладчика:
У процесі налагодження програми був використаний lldb. За допомогою відладчика можна перевіряти змінні під час виконання програми.

Команди для перевірки змінних:
(lldb) frame variable
(lldb) print text
(lldb) print vowel_count

Приклад роботи з відладчиком:
Для тестового тексту "Schwarznegger and Stalone" отримано такі результати:
(lldb) print text
(char[100]) text = "Schwarznegger and Stalone"
(lldb) print vowel_count
(int) vowel_count = 7

Результати виконання програми:
Для тексту "Schwarznegger and Stalone" програма визначила кількість голосних літер:

Кількість голосних: 7

Висновки:
У процесі виконання лабораторної роботи були здобуті наступні навички:

Реалізація алгоритмів із використанням циклів.
Обробка текстових даних у масивах.
Налагодження програмного коду за допомогою відладчика.
Програма працює коректно, дозволяючи визначити кількість голосних літер у заданому тексті.
